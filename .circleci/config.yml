executors:
  node:
    parameters:
      image:
        type: string
        default: "22.13"
    docker:
    - image: cimg/node:<< parameters.image >>

  aws:
    parameters:
      image:
        type: string
        default: "2022.11"
    docker:
      - image: cimg/aws:<< parameters.image >>


aliases:
  restore_cache: &restore_cache
    restore_cache:
      name: Restore node_modules cache
      keys:
        - codemanufacturecom-{{ checksum "package-lock.json" }}

  install_node_modules: &install_node_modules
    run:
      name: Install node.js dependencies
      command: npm install

  persist_cache: &persist_cache
    save_cache:
      name: Save node modules cache
      key: codemanufacturecom-{{ checksum "package-lock.json" }}
      paths:
        - ~/.cache

version: 2.1

jobs:
  bootstrap:
    executor: node
    steps:
      - checkout
      - <<: *restore_cache
      - <<: *install_node_modules
      - <<: *persist_cache
      - persist_to_workspace:
          root: ~/project
          paths: .

  lint:
    executor: node
    steps:
      - attach_workspace:
          at: ~/project
      - run: npm run ci-check

  type_check:
    executor: node
    steps:
      - attach_workspace:
          at: ~/project
      - run: npm run type-check

  unit_tests:
    parallelism: 2
    executor: node
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Run tests
          command: npm run test:ci
          environment:
            NODE_OPTIONS: --max-old-space-size=2048
            JEST_JUNIT_OUTPUT_DIR: ./test-results/jest-node/
            JEST_JUNIT_REPORT_TEST_SUITE_ERRORS: "true"
      - store_test_results:
          path: ./test-results/jest-node/

  build:
    parallelism: 2
    executor: node
    steps:
      - attach_workspace:
          at: ~/project
      - run: npm run build
      - store_artifacts:
          path: public
          destination: codemanufacturecom-website
      - persist_to_workspace:
          root: ~/project
          paths:
            - public

  deploy:
    executor: aws
    working_directory: ~/
    steps:
      - attach_workspace:
          at: ~/project
      - run:
          name: Deploy to S3
          command: aws s3 sync project/public s3://${S3_BUCKET_NAME}/ --delete

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - bootstrap
      - lint:
          requires:
            - bootstrap
      - type_check:
          requires:
            - bootstrap
      - unit_tests:
          requires:
             - bootstrap
      - build:
          requires:
            - lint
            - type_check
            - unit_tests
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
